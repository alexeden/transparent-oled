; PlatformIO Project Configuration File
; https://docs.platformio.org/page/projectconf.html
[platformio]
env_default = huzzah

[common_env_data]
build_flags =
  ; DRAWING_LEVEL:
  ; 0 - includes only primitive drawing functions:
  ; 	- pixel
  ; 	- xline
  ; 	- yline
  ; 	- rectangle
  ; 	- fillFromArray
  ; 	- fillWindow
  ; 1 - level 0 and:
  ; 	- line
  ; 	- polygon
  ; 	- circle
  ; 2 - level 1 and:
  '-DHYPERDISPLAY_DRAWING_LEVEL=4'
  ; USE_PRINT:
  ; 0 - disables printing text
  ; 1 - enables printing text, requires users to implement "getCharInfo()""
  '-DHYPERDISPLAY_USE_PRINT=1'
  ; INCLUDE_DEFAULT_FONT
  ; 0 - don't include the default 5x7 program memory font (to save on program space)
  ; 1 - do include the default 5x7 program memory font (to NOT save on program space)
  '-DHYPERDISPLAY_INCLUDE_DEFAULT_FONT=1'
  ; USE_MATH:
  ; 0 - disables mathematical drawing
  ; 1 - enables mathematical drawing, includes math.h and defines a mathematical object type
  '-DHYPERDISPLAY_USE_MATH=0'
  ; USE_RAY_TRACING
  ; 0 - disables ray tracing functions like filled polygon
  ; 1 - enables ray tracing functions by including SparkFun 2D Ray Tracing
  '-DHYPERDISPLAY_USE_RAY_TRACING=1'

lib_deps_builtin =
  SPI
  Wire

lib_deps_external =
  Streaming
  sparkfun/SparkFun HyperDisplay @ ^2.0.1
  sparkfun/SparkFun HyperDisplay SSD1309 @ ^1.1.1
  sparkfun/SparkFun HyperDisplay Transparent Graphical OLED @ ^1.1.0

[env:huzzah]
platform = espressif8266
framework = arduino
board = huzzah
upload_port = /dev/cu.usbserial-A4016Y5V
build_flags =
  ${common_env_data.build_flags}
lib_deps =
  ${common_env_data.lib_deps_builtin}
  ${common_env_data.lib_deps_external}

[env:nodemcu-32s]
platform = espressif32
framework = arduino
board = nodemcu-32s
upload_port = /dev/cu.SLAB_USBtoUART
build_flags =
  ${common_env_data.build_flags}
lib_deps =
  ${common_env_data.lib_deps_builtin}
  ${common_env_data.lib_deps_external}

[env:featheresp32]
platform = espressif32
framework = arduino
board = featheresp32
monitor_speed = 115200
build_flags =
  ${common_env_data.build_flags}
lib_deps =
  ${common_env_data.lib_deps_builtin}
  ${common_env_data.lib_deps_external}
